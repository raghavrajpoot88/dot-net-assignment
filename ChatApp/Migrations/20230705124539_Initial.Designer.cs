// <auto-generated />
using System;
using ChatApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230705124539_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ChatApp.Model.Login", b =>
                {
                    b.Property<Guid>("LoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LoginId");

                    b.ToTable("logins");
                });

            modelBuilder.Entity("ChatApp.Model.MessageInfo", b =>
                {
                    b.Property<Guid>("MsgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("LoginId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("LoginId1")
                        .HasColumnType("char(36)");

                    b.Property<string>("MsgBody")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("ReceiverId1")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.HasKey("MsgId");

                    b.HasIndex("LoginId1");

                    b.HasIndex("ReceiverId1");

                    b.ToTable("messages");
                });

            modelBuilder.Entity("ChatApp.Model.Registration", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.HasKey("UserId");

                    b.ToTable("registrations");
                });

            modelBuilder.Entity("ChatApp.Models.ReceiverInfo", b =>
                {
                    b.Property<Guid>("ReceiverId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ReceiverId");

                    b.ToTable("receivers");
                });

            modelBuilder.Entity("ChatApp.Model.MessageInfo", b =>
                {
                    b.HasOne("ChatApp.Model.Login", "login")
                        .WithMany("MessageInfos")
                        .HasForeignKey("LoginId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatApp.Models.ReceiverInfo", "Receiver")
                        .WithMany("Messages")
                        .HasForeignKey("ReceiverId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");

                    b.Navigation("login");
                });

            modelBuilder.Entity("ChatApp.Model.Login", b =>
                {
                    b.Navigation("MessageInfos");
                });

            modelBuilder.Entity("ChatApp.Models.ReceiverInfo", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
